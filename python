from flask import Flask, render_template_string, request, jsonify, session

app = Flask(__name__)
app.secret_key = 'supersecretkey'  # Required for sessions

# Sample product data (in a real app, this would be from a database)
PRODUCTS = [
    {'id': 1, 'name': 'Vintage Camera', 'price': 249.99, 'image': 'https://via.placeholder.com/150/FF5733/FFFFFF?text=Camera', 'description': 'A beautiful vintage camera from the 1970s.'},
    {'id': 2, 'name': 'Leather Backpack', 'price': 129.50, 'image': 'https://via.placeholder.com/150/C70039/FFFFFF?text=Backpack', 'description': 'Handcrafted genuine leather backpack with multiple compartments.'},
    {'id': 3, 'name': 'Mechanical Keyboard', 'price': 85.00, 'image': 'https://via.placeholder.com/150/900C3F/FFFFFF?text=Keyboard', 'description': 'A high-quality mechanical keyboard with customizable RGB lighting.'},
    {'id': 4, 'name': 'Espresso Machine', 'price': 399.00, 'image': 'https://via.placeholder.com/150/581845/FFFFFF?text=Espresso', 'description': 'Professional-grade espresso machine for the perfect morning brew.'},
]

# --- HTML Templates (stored as strings for a single file) ---

# Product list page HTML
PRODUCT_LIST_HTML = """
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>E-commerce Store</title>
    <style>
        body { font-family: sans-serif; margin: 20px; background-color: #f4f4f4; }
        .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
        .header a { text-decoration: none; color: #333; font-weight: bold; }
        .header a:hover { text-decoration: underline; }
        .products { display: flex; flex-wrap: wrap; gap: 20px; justify-content: center; }
        .product-card { background: #fff; border: 1px solid #ccc; border-radius: 8px; padding: 15px; width: 250px; text-align: center; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
        .product-card img { max-width: 100%; height: auto; border-radius: 5px; }
        .product-card h3 { margin: 10px 0; }
        .product-card p { color: #555; }
        .add-to-cart-btn { background-color: #007bff; color: white; border: none; padding: 10px 20px; cursor: pointer; border-radius: 5px; margin-top: 10px; }
        .add-to-cart-btn:hover { background-color: #0056b3; }
    </style>
</head>
<body>
    <div class="header">
        <h1>Our Products</h1>
        <a href="/cart">View Cart (<span id="cart-count">0</span>)</a>
    </div>
    <div class="products">
        {% for product in products %}
        <div class="product-card">
            <a href="/product/{{ product.id }}">
                <img src="{{ product.image }}" alt="{{ product.name }}">
            </a>
            <h3>{{ product.name }}</h3>
            <p>$ {{ "%.2f"|format(product.price) }}</p>
            <button class="add-to-cart-btn" onclick="addToCart({{ product.id }}, '{{ product.name }}', {{ product.price }})">Add to Cart</button>
        </div>
        {% endfor %}
    </div>

    <script>
        const cartCountSpan = document.getElementById('cart-count');
        
        function updateCartCount() {
            const cart = JSON.parse(localStorage.getItem('cart')) || {};
            let count = Object.values(cart).reduce((total, item) => total + item.quantity, 0);
            cartCountSpan.textContent = count;
        }

        function addToCart(productId, productName, productPrice) {
            let cart = JSON.parse(localStorage.getItem('cart')) || {};
            if (cart[productId]) {
                cart[productId].quantity += 1;
            } else {
                cart[productId] = {
                    id: productId,
                    name: productName,
                    price: productPrice,
                    quantity: 1
                };
            }
            localStorage.setItem('cart', JSON.stringify(cart));
            updateCartCount();
            alert(productName + ' added to cart!');
        }
        
        document.addEventListener('DOMContentLoaded', updateCartCount);
    </script>
</body>
</html>
"""

# Product detail page HTML
PRODUCT_DETAIL_HTML = """
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>{{ product.name }}</title>
    <style>
        body { font-family: sans-serif; margin: 20px; background-color: #f4f4f4; }
        .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
        .header a { text-decoration: none; color: #333; font-weight: bold; }
        .header a:hover { text-decoration: underline; }
        .product-container { display: flex; gap: 40px; background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); max-width: 800px; margin: auto; }
        .product-image { flex: 1; text-align: center; }
        .product-image img { max-width: 100%; height: auto; border-radius: 8px; }
        .product-details { flex: 2; }
        .product-details h1 { margin-top: 0; }
        .product-details p { color: #555; line-height: 1.6; }
        .product-details .price { font-size: 1.5em; color: #007bff; font-weight: bold; margin-bottom: 15px; }
        .add-to-cart-btn { background-color: #007bff; color: white; border: none; padding: 12px 25px; cursor: pointer; border-radius: 5px; font-size: 1em; }
        .add-to-cart-btn:hover { background-color: #0056b3; }
    </style>
</head>
<body>
    <div class="header">
        <a href="/">← Back to Products</a>
        <a href="/cart">View Cart (<span id="cart-count">0</span>)</a>
    </div>
    <div class="product-container">
        <div class="product-image">
            <img src="{{ product.image }}" alt="{{ product.name }}">
        </div>
        <div class="product-details">
            <h1>{{ product.name }}</h1>
            <p class="price">$ {{ "%.2f"|format(product.price) }}</p>
            <p>{{ product.description }}</p>
            <button class="add-to-cart-btn" onclick="addToCart({{ product.id }}, '{{ product.name }}', {{ product.price }})">Add to Cart</button>
        </div>
    </div>
    
    <script>
        const cartCountSpan = document.getElementById('cart-count');
        
        function updateCartCount() {
            const cart = JSON.parse(localStorage.getItem('cart')) || {};
            let count = Object.values(cart).reduce((total, item) => total + item.quantity, 0);
            cartCountSpan.textContent = count;
        }

        function addToCart(productId, productName, productPrice) {
            let cart = JSON.parse(localStorage.getItem('cart')) || {};
            if (cart[productId]) {
                cart[productId].quantity += 1;
            } else {
                cart[productId] = {
                    id: productId,
                    name: productName,
                    price: productPrice,
                    quantity: 1
                };
            }
            localStorage.setItem('cart', JSON.stringify(cart));
            updateCartCount();
            alert(productName + ' added to cart!');
        }
        
        document.addEventListener('DOMContentLoaded', updateCartCount);
    </script>
</body>
</html>
"""

# Shopping cart page HTML
CART_HTML = """
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Shopping Cart</title>
    <style>
        body { font-family: sans-serif; margin: 20px; background-color: #f4f4f4; }
        .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
        .header a { text-decoration: none; color: #333; font-weight: bold; }
        .header a:hover { text-decoration: underline; }
        .cart-container { max-width: 800px; margin: auto; background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
        .cart-item { display: flex; justify-content: space-between; align-items: center; padding: 10px 0; border-bottom: 1px solid #eee; }
        .cart-item-info { flex: 1; }
        .cart-item-price { width: 100px; text-align: right; }
        .cart-total { margin-top: 20px; font-size: 1.2em; font-weight: bold; text-align: right; }
        .checkout-btn { display: block; width: 200px; margin: 20px 0 0 auto; background-color: #28a745; color: white; border: none; padding: 15px; text-align: center; cursor: pointer; border-radius: 5px; text-decoration: none; font-size: 1.1em; }
        .checkout-btn:hover { background-color: #218838; }
        #cart-items-list { list-style: none; padding: 0; }
        .empty-cart-message { text-align: center; color: #888; }
    </style>
</head>
<body>
    <div class="header">
        <h1>Your Shopping Cart</h1>
        <a href="/">← Continue Shopping</a>
    </div>
    <div class="cart-container">
        <div id="cart-items-list"></div>
        <div id="cart-summary" style="display: none;">
            <div class="cart-total">Total: $<span id="cart-total-price">0.00</span></div>
            <button class="checkout-btn" onclick="checkout()">Checkout</button>
        </div>
        <div id="empty-cart-message" class="empty-cart-message" style="display: block;">Your cart is empty.</div>
    </div>
    
    <script>
        const cartItemsList = document.getElementById('cart-items-list');
        const cartTotalPriceSpan = document.getElementById('cart-total-price');
        const cartSummaryDiv = document.getElementById('cart-summary');
        const emptyCartMessageDiv = document.getElementById('empty-cart-message');

        function renderCart() {
            const cart = JSON.parse(localStorage.getItem('cart')) || {};
            const itemIds = Object.keys(cart);
            cartItemsList.innerHTML = '';
            
            if (itemIds.length === 0) {
                cartSummaryDiv.style.display = 'none';
                emptyCartMessageDiv.style.display = 'block';
                return;
            }

            let total = 0;
            itemIds.forEach(id => {
                const item = cart[id];
                const itemTotal = item.price * item.quantity;
                total += itemTotal;
                
                const li = document.createElement('div');
                li.className = 'cart-item';
                li.innerHTML = `
                    <div class="cart-item-info">
                        <strong>${item.name}</strong>
                        <br>
                        Quantity: ${item.quantity}
                    </div>
                    <div class="cart-item-price">$${itemTotal.toFixed(2)}</div>
                `;
                cartItemsList.appendChild(li);
            });
            
            cartTotalPriceSpan.textContent = total.toFixed(2);
            cartSummaryDiv.style.display = 'block';
            emptyCartMessageDiv.style.display = 'none';
        }

        async function checkout() {
            const cart = JSON.parse(localStorage.getItem('cart')) || {};
            if (Object.keys(cart).length === 0) {
                alert('Your cart is empty!');
                return;
            }

            try {
                const response = await fetch('/checkout', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(cart)
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    alert(result.message);
                    localStorage.removeItem('cart');
                    window.location.href = '/'; // Redirect to the home page
                } else {
                    alert('Order failed: ' + result.message);
                }
            } catch (error) {
                alert('An error occurred during checkout.');
                console.error('Checkout error:', error);
            }
        }
        
        document.addEventListener('DOMContentLoaded', renderCart);
    </script>
</body>
</html>
"""

# --- Flask Routes (The Backend) ---

@app.route('/')
def product_list():
    """Renders the product list page."""
    return render_template_string(PRODUCT_LIST_HTML, products=PRODUCTS)

@app.route('/product/<int:product_id>')
def product_detail(product_id):
    """Renders the product detail page for a specific product."""
    product = next((p for p in PRODUCTS if p['id'] == product_id), None)
    if product is None:
        return "Product not found!", 404
    return render_template_string(PRODUCT_DETAIL_HTML, product=product)

@app.route('/cart')
def view_cart():
    """Renders the shopping cart page."""
    return render_template_string(CART_HTML)

@app.route('/checkout', methods=['POST'])
def checkout():
    """
    Simulates the order processing.
    In a real application, this would handle payment, database updates,
    and sending confirmation emails.
    """
    cart = request.get_json()
    if not cart:
        return jsonify({'message': 'Cart is empty.'}), 400

    print("--- New Order Received ---")
    total_price = 0
    for product_id, item in cart.items():
        print(f"Product: {item['name']}, Quantity: {item['quantity']}, Price: ${item['price']}")
        total_price += item['price'] * item['quantity']
    print(f"Total Order Price: ${total_price:.2f}")
    print("-------------------------")

    return jsonify({'message': 'Order placed successfully!', 'total': total_price}), 200

if __name__ == '__main__':
    app.run(debug=True)
